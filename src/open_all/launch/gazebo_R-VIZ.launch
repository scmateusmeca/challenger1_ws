<?xml version="1.0"?>
<launch>
  <arg name="laser_enabled" default="false"/>
  <arg name="kinect_enabled" default="false"/>

  <!-- these are the arguments you can pass this launch file, for example paused:=true -->
  <arg name="verbose"       default="true"/>
  <arg name="paused"        default="false"/>
  <arg name="use_sim_time"  default="true"/>
  <arg name="gui"           default="true"/>
  <arg name="headless"      default="false"/>
  <arg name="debug"         default="false"/>
  <arg name="urdf_extras"         default="$(find acc)/urdf/all_extras.urdf.xacro"/>



  <!-- <arg name="robot_model"   default="$(find learnrobotics)/model/urdf/robot.xacro"/> -->
  <env name="GAZEBO_MODEL_PATH" value="${GAZEBO_MODEL_PATH}:$(find world)/model"/>
  <env name="GAZEBO_RESOURCE_PATH" value="${GAZEBO_RESOURCE_PATH}:$(find world)/model"/>

  <!-- We resume the logic in empty_world.launch -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"    value="$(find world)/world/cimatec.world"/>
    <arg name="debug"         value="$(arg debug)" />
    <arg name="gui"           value="$(arg gui)" />
    <arg name="paused"        value="$(arg paused)"/>
    <arg name="use_sim_time"  value="$(arg use_sim_time)"/>
    <arg name="headless"      value="$(arg headless)"/>
    <arg name="verbose"       value="$(arg verbose)"/>
  </include>

<!-- Spawn Husky in the origin-->
  <include file="$(find husky_gazebo)/launch/spawn_husky.launch">
    <arg name="laser_enabled" value="$(arg laser_enabled)"/>
    <arg name="kinect_enabled" value="$(arg kinect_enabled)"/>
    <arg name="urdf_extras" value="$(arg urdf_extras)"/>
  </include>

  <!-- Run RViz -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find acc)/rviz/robot.rviz" output="screen"/>

  

  <!-- Load the URDF into the ROS Parameter Server -->
  <!-- <param name="robot_description" command="$(find xacro)/xacro $(arg model)"/> -->
  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->
  <!-- <node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" respawn="false" output="screen"
    args="-z 0.0
          -unpause
          -urdf
          -model /
          -param robot_description"/> -->

  <!--- Run gmapping -->
  <include file="$(find acc)/launch/gmapping.launch" />

  <!--- Run Move Base -->
  <include file="$(find husky_navigation)/launch/move_base.launch" />

  <!-- Run Aloam -->
  <!-- <include file="$(find aloam_velodyne)/launch/aloam_velodyne_VLP_16.launch" /> -->

 
  <!-- Converting PointCloud2 to LaserScan-->
 <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan_node" args="cloud_in:=/velodyne_points" />

 
  <rosparam file="$(find nav2d_tutorials)/param/ros.yaml"/>

  <node name="Operator" pkg="nav2d_operator" type="operator" >
		<remap from="scan" to="scan"/>
		<rosparam file="$(find nav2d_tutorials)/param/operator.yaml"/>
		<rosparam file="$(find nav2d_tutorials)/param/costmap.yaml" ns="local_map" />
	</node>

  <node name="Navigator" pkg="nav2d_navigator" type="navigator">
		<rosparam file="$(find nav2d_tutorials)/param/navigator.yaml"/>
	</node>

  <node name="GetMap" pkg="nav2d_navigator" type="get_map_client" />
  <node name="Explore" pkg="nav2d_navigator" type="explore_client" />
  <node name="SetGoal" pkg="nav2d_navigator" type="set_goal_client" /> 


</launch>
