<?xml version="1.0"?>
<launch>

<!-- Gazebo -->
  <arg name="laser_enabled" default="false"/>
  <arg name="kinect_enabled" default="false"/>
  <arg name="urdf_extras" default="$(find challenge_husky)/urdf/attachments.urdf.xacro"/>


    <!-- <arg name="world_name" default="$(find sphere_follower)/worlds/cimatec_world.world"/>
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(arg world_name)"/> 
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include> -->

<!-- Gazebo Final Map  -->
  <include file="$(find bir_cimatec4_map)/launch/gazebo.launch">
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>
  <!-- We resume the logic in empty_world.launch -->
  <!-- <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name"    value="$(find world)/world/cimatec.world"/>
    <arg name="debug"         value="$(arg debug)" />
    <arg name="gui"           value="$(arg gui)" />
    <arg name="paused"        value="$(arg paused)"/>
    <arg name="use_sim_time"  value="$(arg use_sim_time)"/>
    <arg name="headless"      value="$(arg headless)"/>
    <arg name="verbose"       value="$(arg verbose)"/>
  </include> -->


<!-- Custom Spawn  -->
  <include file="$(find challenge_husky)/launch/custom_spawn_husky.launch">
    <arg name="laser_enabled" value="$(arg laser_enabled)"/>
    <arg name="kinect_enabled" value="$(arg kinect_enabled)"/>
    <arg name="urdf_extras" default="$(arg urdf_extras)"/>
    <arg name="x" default="45.0"/>
    <arg name="y" default="5.0"/>
    <arg name="z" default="0.0"/>
    <arg name="yaw" default="3.1415"/>
  </include>
  
<!-- Pointcloud to laserscan -->
  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
        <remap from="cloud_in" to="/velodyne_points"/>
        <rosparam>
            target_frame: velodyne # Leave disabled to output scan in pointcloud frame
            transform_tolerance: 0.01
            min_height: -0.4
            # Concurrency level, affects number of pointclouds queued for processing and number of threads used
            # 0 : Detect number of cores
            # 1 : Single threaded
            # 2->inf : Parallelism level
            concurrency_level: 1
        </rosparam>
  </node>
<!-- Rviz -->
  <arg name="rviz" default="true"/>
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" respawn="false" output="screen" args="-d $(find challenge_husky)/config/rviz_config.rviz" />

 

</launch>
